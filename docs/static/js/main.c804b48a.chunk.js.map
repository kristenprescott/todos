{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","todos","setTodos","subject","details","newTodo","setNewTodo","useEffect","a","fetch","process","res","json","data","console","error","handleSubmit","e","preventDefault","method","headers","body","JSON","stringify","response","handleChange","target","name","value","handleDelete","id","idx","copyTodos","splice","log","className","map","todo","onClick","onSubmit","type","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c804b48a.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useEffect, useState } from \"react\";\n\nexport default function App() {\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState({\n    subject: \"\",\n    details: \"\",\n  });\n  useEffect(() => {\n    (async () => {\n      try {\n        //\n        const res = await fetch(`${process.env.REACT_APP_API_URL}`);\n        const data = await res.json();\n        setTodos(data);\n      } catch (error) {\n        //\n        console.error(error);\n      }\n    })();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(newTodo),\n      });\n      const data = await response.json();\n      setTodos([...todos, data]);\n      // clear input after submission\n      setNewTodo({\n        subject: \"\",\n        details: \"\",\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleChange = (e) => {\n    setNewTodo({ ...newTodo, [e.target.name]: e.target.value });\n  };\n\n  const handleDelete = async (e, id, idx) => {\n    // make del req to api\n    try {\n      const res = await fetch(\n        `${process.env.REACT_APP_API_URL}${id}`,\n        // `https://todos-by-prescott.herokuapp.com/todos/${id}`,\n\n        {\n          method: \"DELETE\",\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n        }\n      );\n      const data = res.json();\n      // remove todo item from todos\n      const copyTodos = [...todos];\n      // remove item at index\n      copyTodos.splice(idx, 1);\n      // setTodos\n      setTodos(copyTodos);\n      console.log(\"todo data: \", data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header id=\"header\">\n        <h1 className=\"title\">Todo List:</h1>\n      </header>\n\n      <hr></hr>\n      <div className=\"main\">\n        <div className=\"list grid-container\">\n          {todos.map((todo, idx) => (\n            <div key={todo.id} className=\"list-item-container\">\n              <div className=\"list-item\">\n                {/* <label className=\"checkmark-container\">\n                  <input type=\"checkbox\" checked=\"checked\"></input>\n                  <span className=\"checkmark\"></span>\n                </label> */}\n                <p className=\"li-subj\">{todo.subject} </p>\n                <p>&nbsp;</p>\n                <p>&nbsp;</p>\n                <p className=\"li-details\"> | {todo.details}</p>\n              </div>\n\n              <div className=\"btn-wrapper del-btn-wrapper\">\n                <button\n                  className=\"btn del-btn\"\n                  onClick={(e) => {\n                    handleDelete(e, todo.id, idx);\n                  }}\n                >\n                  Delete\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <hr></hr>\n        <div className=\"add-container flex-col\">\n          <div className=\"add-title-wrapper\">\n            <div className=\"add-title\">Add new items:</div>\n          </div>\n          <form className=\"add-form\" onSubmit={handleSubmit}>\n            <label className=\"subj-wrapper subj-label\">\n              Subject:{\" \"}\n              <input\n                className=\"subj-input\"\n                type=\"text\"\n                name=\"subject\"\n                value={newTodo.subject}\n                onChange={handleChange}\n              />\n            </label>\n            <label className=\"details-wrapper details-label\">\n              Details:{\" \"}\n              <input\n                className=\"details-input\"\n                type=\"text\"\n                name=\"details\"\n                value={newTodo.details}\n                onChange={handleChange}\n              />\n            </label>\n            <div className=\"btn-wrapper submit-btn-wrapper\">\n              <input className=\"btn submit-btn\" type=\"submit\" />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}